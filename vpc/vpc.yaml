AWSTemplateFormatVersion: 2010-09-09
Description: ---
#Metadata:

Parameters:

  CidrClassB:
    Type: String

  Name:
    Type: String

  Region:
    Type: String

  Stage:
    Type: String

#Mappings:

#Conditions:

Resources:

  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PrivateNetworkAclEntryAllowVpcIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !GetAtt Vpc.CidrBlock
      Egress: false
      NetworkAclId: !Ref PrivateNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1
    DependsOn:
      - PrivateNetworkAcl
      - Vpc

  PrivateNetworkAclEntryAllowVpcOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !GetAtt Vpc.CidrBlock
      Egress: true
      NetworkAclId: !Ref PrivateNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1
    DependsOn:
      - PrivateNetworkAcl
      - Vpc

  PrivateNetworkAclSubnetAAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      SubnetId: !Ref PrivateSubnetA

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub 10.${CidrClassB}.16.0/20
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PrivateSubnetARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateSubnetARouteTable
    DependsOn:
      - PrivateSubnetA
      - PrivateSubnetARouteTable

  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PublicNetworkAclEntryAllowAllIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: false
      NetworkAclId: !Ref PublicNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1
    DependsOn:
      - PublicNetworkAcl

  PublicNetworkAclEntryAllowAllOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: true
      NetworkAclId: !Ref PublicNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1
    DependsOn:
      - PublicNetworkAcl

  PublicNetworkAclSubnetAAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      SubnetId: !Ref PublicSubnetA

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub 10.${CidrClassB}.0.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PublicSubnetARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
    DependsOn:
      - Vpc

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateSubnetARouteTable
    DependsOn:
      - PublicSubnetA
      - PublicSubnetARouteTable

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub 10.${CidrClassB}.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${Name}-${Region}-${Stage}-vpc

Outputs:

  CidrBlock:
    Value: !GetAtt Vpc.CidrBlock
